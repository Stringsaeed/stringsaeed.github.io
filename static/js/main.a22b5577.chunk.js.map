{"version":3,"sources":["components/button/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","styled","button","App","className","onClick","window","open","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"woBAEA,IAeeA,E,KAfAC,EAAOC,OAAV,K,MC6HGC,MA3Hf,WACI,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,WAEnB,wBAAIA,UAAU,QAAd,kBACA,4DACA,wCACA,6BACA,yBAAKA,UAAU,eACX,kBAAC,EAAD,CACIC,QAAS,kBACLC,OAAOC,KAAK,wCAFpB,UAOA,kBAAC,EAAD,CACIF,QAAS,kBACLC,OAAOC,KAAK,yCAFpB,WAOA,kBAAC,EAAD,CACIF,QAAS,kBACLC,OAAOC,KACH,oEAHZ,YASA,kBAAC,EAAD,CACIF,QAAS,kBACLC,OAAOC,KACH,yDAHZ,YASA,kBAAC,EAAD,CACIF,QAAS,kBACLC,OAAOC,KACH,uFAHZ,YAUJ,6BACA,4BACI,4BACI,2BACI,+CACmB,IACf,8BACI,uBAAGC,KAAK,KAAR,yBAKhB,4BACI,2BACI,6CACgB,oDADhB,KACkD,IAC9C,8BACI,uBAAGA,KAAK,8BAAR,iBAOhB,4BACI,2BACI,6CACiB,IACb,8DAFJ,KAEgD,IAC5C,8BACI,uBAAGA,KAAK,kCAAR,kBAOhB,4BACI,2BACI,6CACiB,IACb,iEAFJ,KAEmD,IAC/C,8BACI,uBAAGA,KAAK,2BAAR,sBAOhB,4BACI,2BACI,6CACiB,IACb,kEAFJ,KAEoD,IAChD,8BACI,uBAAGA,KAAK,2BAAR,2BCtGhBC,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a22b5577.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n    padding: 4px 22px;\n    border: 2px solid #7d4cdb;\n    background-color: transparent;\n    text-transform: none;\n    border-radius: 22px;\n    font-size: 18px;\n    line-height: 24px;\n    color: #000000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: Gelion, Serif, serif;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport { Button } from \"./components\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"AppContainer\">\n            <div className=\"ContentContainer\">\n                <div className=\"imageContainer\">\n                    <div className=\"image\" />\n                </div>\n                <h2 className=\"name\">Muhammed Saeed</h2>\n                <h1>Mid Level Software Developer</h1>\n                <h3>23 years</h3>\n                <br />\n                <div className=\"buttonGroup\">\n                    <Button\n                        onClick={() =>\n                            window.open(\"https://www.github.com/stringsaeed\")\n                        }\n                    >\n                        Github\n                    </Button>\n                    <Button\n                        onClick={() =>\n                            window.open(\"https://www.twitter.com/stringsaeed\")\n                        }\n                    >\n                        Twitter\n                    </Button>\n                    <Button\n                        onClick={() =>\n                            window.open(\n                                \"whatsapp://send?phone=+201118784615&abid=+201118784615&text=Hi\"\n                            )\n                        }\n                    >\n                        Whatsapp\n                    </Button>\n                    <Button\n                        onClick={() =>\n                            window.open(\n                                \"https://www.linkedin.com/in/mohamed-saeed-480a43b6/\"\n                            )\n                        }\n                    >\n                        Linkedin\n                    </Button>\n                    <Button\n                        onClick={() =>\n                            window.open(\n                                \"https://open.spotify.com/user/22fqgfawfcjnp7irxkt2ozefi?si=WoZAX1EaSuSqEBLAAO2Q3Q\"\n                            )\n                        }\n                    >\n                        Spotify\n                    </Button>\n                </div>\n                <br />\n                <ul>\n                    <li>\n                        <p>\n                            <span>\n                                Graduated from{\" \"}\n                                <span>\n                                    <a href=\"/\">El Shoroq Academy</a>\n                                </span>\n                            </span>\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <span>\n                                Worked as a <span> Backend Developer</span> @{\" \"}\n                                <span>\n                                    <a href=\"https://www.crevisoft.com/\">\n                                        Crevisoft\n                                    </a>\n                                </span>\n                            </span>\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <span>\n                                Working as a{\" \"}\n                                <span> Lead React Native Developer</span> @{\" \"}\n                                <span>\n                                    <a href=\"https://www.expandcart.com/en/\">\n                                        ExpandCart\n                                    </a>\n                                </span>\n                            </span>\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <span>\n                                Working as a{\" \"}\n                                <span> Mid-Level Full Stack Developer</span> @{\" \"}\n                                <span>\n                                    <a href=\"https://anspire.agency/\">\n                                        Anspire Agency\n                                    </a>\n                                </span>\n                            </span>\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <span>\n                                Working as a{\" \"}\n                                <span> (Part-Time) Front-End Developer</span> @{\" \"}\n                                <span>\n                                    <a href=\"https://rabbit-app.com/\">\n                                        Rabbit Scooters\n                                    </a>\n                                </span>\n                            </span>\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}