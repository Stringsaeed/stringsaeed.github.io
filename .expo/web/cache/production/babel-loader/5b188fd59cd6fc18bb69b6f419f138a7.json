{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Checkbox.tsx\";import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import CheckboxAndroid from\"./CheckboxAndroid\";import CheckboxIOS from\"./CheckboxIOS\";import{withTheme}from\"../core/theming\";var Checkbox=function(_React$Component){_inherits(Checkbox,_React$Component);function Checkbox(){_classCallCheck(this,Checkbox);return _possibleConstructorReturn(this,_getPrototypeOf(Checkbox).apply(this,arguments));}_createClass(Checkbox,[{key:\"render\",value:function render(){return Platform.OS==='ios'?React.createElement(CheckboxIOS,_extends({},this.props,{__source:{fileName:_jsxFileName,lineNumber:92}})):React.createElement(CheckboxAndroid,_extends({},this.props,{__source:{fileName:_jsxFileName,lineNumber:94}}));}}]);return Checkbox;}(React.Component);Checkbox.Android=CheckboxAndroid;Checkbox.IOS=CheckboxIOS;export default withTheme(Checkbox);","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","React","Component","Android","CheckboxAndroid","IOS","CheckboxIOS","Platform","withTheme"],"mappings":"6dAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,6DAEA,MAAA,CAAA,eAAA,yBAKA,MAAA,CAAA,WAAA,qBACA,OAAA,SAAA,uBA0EMA,GAAAA,CAAAA,Q,yQAOK,CACP,MAAOO,CAAAA,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,CACL,KAAA,CAAA,aAAA,CAAA,WAAA,CAAA,QAAA,CAAA,EAAA,CAAiB,KAAjB,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADKA,EACL,CAAA,CAAA,CAAA,CADKA,CAGL,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAqB,KAArB,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAHF,EAGE,CAAA,CAAA,CAAA,CAHF,C,uBARmBN,KAAK,CAACC,S,CAAvBF,CAAAA,Q,CAEGG,OAFHH,CAEaI,eAFbJ,CAAAA,Q,CAKGK,GALHL,CAKSM,WALTN,CAgBN,cAAeQ,CAAAA,SAAS,CAAxB,QAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}