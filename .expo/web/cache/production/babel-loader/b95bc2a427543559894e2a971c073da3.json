{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/ToggleButton/ToggleButtonGroup.tsx\";import*as React from'react';export var ToggleButtonGroupContext=React.createContext(null);var ToggleButtonGroup=function(_React$Component){_inherits(ToggleButtonGroup,_React$Component);function ToggleButtonGroup(){_classCallCheck(this,ToggleButtonGroup);return _possibleConstructorReturn(this,_getPrototypeOf(ToggleButtonGroup).apply(this,arguments));}_createClass(ToggleButtonGroup,[{key:\"render\",value:function render(){var _this$props=this.props,value=_this$props.value,onValueChange=_this$props.onValueChange,children=_this$props.children;return React.createElement(ToggleButtonGroupContext.Provider,{value:{value:value,onValueChange:onValueChange},__source:{fileName:_jsxFileName,lineNumber:63}},children);}}]);return ToggleButtonGroup;}(React.Component);ToggleButtonGroup.displayName='ToggleButton.Group';export default ToggleButtonGroup;","map":{"version":3,"sources":["ToggleButtonGroup.tsx"],"names":["ToggleButtonGroupContext","React","ToggleButtonGroup","Component","displayName","value","onValueChange","children"],"mappings":"8bAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAsBA,MAAO,IAAMA,CAAAA,wBAAwB,CAAGC,KAAK,CAALA,aAAAA,CAAjC,IAAiCA,CAAjC,CAiCDC,GAAAA,CAAAA,iB,sTAGK,CAAA,GAAA,CAAA,WAAA,CACoC,KADpC,KAAA,CACCG,KADD,CAAA,WAAA,CAAA,KAAA,CACQC,aADR,CAAA,WAAA,CAAA,aAAA,CACuBC,QADvB,CAAA,WAAA,CAAA,QAAA,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLF,KAAK,CADA,KAAA,CAELC,aAAa,CAHjB,aACS,CADT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CADF,QACE,CADF,C,gCAN4BL,KAAK,CAACE,S,CAAhCD,CAAAA,iB,CACGE,WADHF,CACiB,oBADjBA,CAmBN,cAAA,CAAA,iBAAA","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const ToggleButtonGroupContext = React.createContext<\n  ToggleButtonContextType\n>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, checkout <a href=\"/toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { ToggleButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'left',\n *   };\n *\n *   render() {\n *     return(\n *       <ToggleButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *           <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *           <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *       </ToggleButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass ToggleButtonGroup extends React.Component<Props> {\n  static displayName = 'ToggleButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <ToggleButtonGroupContext.Provider\n        value={{\n          value,\n          onValueChange,\n        }}\n      >\n        {children}\n      </ToggleButtonGroupContext.Provider>\n    );\n  }\n}\n\nexport default ToggleButtonGroup;\n"]},"metadata":{},"sourceType":"module"}