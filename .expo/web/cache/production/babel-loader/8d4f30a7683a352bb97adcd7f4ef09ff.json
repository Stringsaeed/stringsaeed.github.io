{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Banner.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Surface from\"./Surface\";import Text from\"./Typography/Text\";import Button from\"./Button\";import Icon from\"./Icon\";import{withTheme}from\"../core/theming\";import shadow from\"../styles/shadow\";var ELEVATION=1;var DEFAULT_MAX_WIDTH=960;var Banner=function(_React$Component){_inherits(Banner,_React$Component);function Banner(){var _getPrototypeOf2;var _this;_classCallCheck(this,Banner);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Banner)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={position:new Animated.Value(_this.props.visible?1:0),layout:{height:0,measured:false}};_this.handleLayout=function(_ref){var nativeEvent=_ref.nativeEvent;var height=nativeEvent.layout.height;_this.setState({layout:{height:height,measured:true}});};_this.toggle=function(){if(_this.props.visible){_this.show();}else{_this.hide();}};_this.show=function(){Animated.timing(_this.state.position,{duration:250,toValue:1}).start();};_this.hide=function(){Animated.timing(_this.state.position,{duration:200,toValue:0}).start();};return _this;}_createClass(Banner,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.visible!==this.props.visible){this.toggle();}}},{key:\"render\",value:function render(){var _this$props=this.props,visible=_this$props.visible,icon=_this$props.icon,children=_this$props.children,actions=_this$props.actions,contentStyle=_this$props.contentStyle,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"visible\",\"icon\",\"children\",\"actions\",\"contentStyle\",\"style\",\"theme\"]);var _this$state=this.state,position=_this$state.position,layout=_this$state.layout;var height=Animated.multiply(position,layout.height);var translateY=Animated.multiply(Animated.add(position,-1),layout.height);return React.createElement(Surface,_extends({},rest,{style:[styles.container,shadow(ELEVATION),style],__source:{fileName:_jsxFileName,lineNumber:191}}),React.createElement(View,{style:[styles.wrapper,contentStyle],__source:{fileName:_jsxFileName,lineNumber:195}},React.createElement(Animated.View,{style:{height:height},__source:{fileName:_jsxFileName,lineNumber:196}}),React.createElement(Animated.View,{onLayout:this.handleLayout,style:[layout.measured||!visible?[styles.absolute,{transform:[{translateY:translateY}]}]:null,!layout.measured&&!visible?{opacity:0}:null],__source:{fileName:_jsxFileName,lineNumber:197}},React.createElement(View,{style:styles.content,__source:{fileName:_jsxFileName,lineNumber:213}},icon?React.createElement(View,{style:styles.icon,__source:{fileName:_jsxFileName,lineNumber:215}},React.createElement(Icon,{source:icon,size:40,__source:{fileName:_jsxFileName,lineNumber:218}})):null,React.createElement(Text,{style:styles.message,__source:{fileName:_jsxFileName,lineNumber:221}},children)),React.createElement(View,{style:styles.actions,__source:{fileName:_jsxFileName,lineNumber:223}},actions.map(function(_ref2,i){var label=_ref2.label,others=_objectWithoutProperties(_ref2,[\"label\"]);return React.createElement(Button,_extends({key:i,compact:true,mode:\"text\",style:styles.button},others,{__source:{fileName:_jsxFileName,lineNumber:225}}),label);})))));}}]);return Banner;}(React.Component);var styles=StyleSheet.create({container:{elevation:ELEVATION},wrapper:{overflow:'hidden',alignSelf:'center',width:'100%',maxWidth:DEFAULT_MAX_WIDTH},absolute:{position:'absolute',top:0,width:'100%'},content:{flexDirection:'row',justifyContent:'flex-start',marginHorizontal:8,marginTop:16,marginBottom:0},icon:{margin:8},message:{flex:1,margin:8},actions:{flexDirection:'row',justifyContent:'flex-end',margin:4},button:{margin:4}});export default withTheme(Banner);","map":{"version":3,"sources":["Banner.tsx"],"names":["ELEVATION","DEFAULT_MAX_WIDTH","Banner","React","Component","state","position","Animated","layout","height","measured","prevProps","handleLayout","nativeEvent","toggle","show","duration","toValue","hide","visible","icon","children","actions","contentStyle","style","theme","rest","translateY","styles","shadow","transform","opacity","label","others","StyleSheet","container","elevation","wrapper","overflow","alignSelf","width","maxWidth","absolute","top","content","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","message","flex","button","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<{\n    label: string;\n    onPress: () => void;\n  }>;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  position: Animated.Value;\n  layout: {\n    height: number;\n    measured: boolean;\n  };\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: true,\n *   };\n *\n *   render() {\n *     return (\n *       <Banner\n *         visible={this.state.visible}\n *         actions={[\n *           {\n *             label: 'Fix it',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *           {\n *             label: 'Learn more',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *         ]}\n *         icon={({ size }) =>\n *           <Image\n *             source={{ uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4' }}\n *             style={{\n *               width: size,\n *               height: size,\n *             }}\n *           />\n *         }\n *       >\n *         There was a problem processing a transaction on your credit card.\n *       </Banner>\n *     );\n *   }\n * }\n * ```\n */\nclass Banner extends React.Component<Props, State> {\n  state = {\n    position: new Animated.Value(this.props.visible ? 1 : 0),\n    layout: {\n      height: 0,\n      measured: false,\n    },\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.toggle();\n    }\n  }\n\n  private handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n\n    this.setState({ layout: { height, measured: true } });\n  };\n\n  private toggle = () => {\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private show = () => {\n    Animated.timing(this.state.position, {\n      duration: 250,\n      toValue: 1,\n    }).start();\n  };\n\n  private hide = () => {\n    Animated.timing(this.state.position, {\n      duration: 200,\n      toValue: 0,\n    }).start();\n  };\n\n  render() {\n    const {\n      visible,\n      icon,\n      children,\n      actions,\n      contentStyle,\n      style,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      theme,\n      ...rest\n    } = this.props;\n    const { position, layout } = this.state;\n\n    // The banner animation has 2 parts:\n    // 1. Blank spacer element which animates its height to move the content\n    // 2. Actual banner which animates its translateY\n    // In initial render, we position everything normally and measure the height of the banner\n    // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n    // We need this because we need to move the content below as if banner's height was being animated\n    // However we can't animated banner's height directly as it'll also resize the content inside\n    const height = Animated.multiply(position, layout.height);\n\n    const translateY = Animated.multiply(\n      Animated.add(position, -1),\n      layout.height\n    );\n    return (\n      <Surface\n        {...rest}\n        style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n      >\n        <View style={[styles.wrapper, contentStyle]}>\n          <Animated.View style={{ height }} />\n          <Animated.View\n            onLayout={this.handleLayout}\n            style={[\n              layout.measured || !visible\n                ? // If we have measured banner's height or it's invisible,\n                  // Position it absolutely, the layout will be taken care of the spacer\n                  [styles.absolute, { transform: [{ translateY }] }]\n                : // Otherwise position it normally\n                  null,\n              !layout.measured && !visible\n                ? // If we haven't measured banner's height yet and it's invisible,\n                  // hide it with opacity: 0 so user doesn't see it\n                  { opacity: 0 }\n                : null,\n            ]}\n          >\n            <View style={styles.content}>\n              {icon ? (\n                <View style={styles.icon}>\n                  {/*\n                  // @ts-ignore */}\n                  <Icon source={icon} size={40} />\n                </View>\n              ) : null}\n              <Text style={styles.message}>{children}</Text>\n            </View>\n            <View style={styles.actions}>\n              {actions.map(({ label, ...others }, i) => (\n                <Button\n                  key={/* eslint-disable-line react/no-array-index-key */ i}\n                  compact\n                  mode=\"text\"\n                  style={styles.button}\n                  {...others}\n                >\n                  {label}\n                </Button>\n              ))}\n            </View>\n          </Animated.View>\n        </View>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"module"}