{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Switch.tsx\";import*as React from'react';import{grey400,grey800,grey50,white,black}from\"../styles/colors\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Platform from\"react-native-web/dist/exports/Platform\";import NativeSwitch from\"react-native-web/dist/exports/Switch\";import setColor from'color';import{withTheme}from\"../core/theming\";var version=NativeModules.PlatformConstants?NativeModules.PlatformConstants.reactNativeVersion:undefined;var Switch=function(_React$Component){_inherits(Switch,_React$Component);function Switch(){_classCallCheck(this,Switch);return _possibleConstructorReturn(this,_getPrototypeOf(Switch).apply(this,arguments));}_createClass(Switch,[{key:\"render\",value:function render(){var _this$props=this.props,value=_this$props.value,disabled=_this$props.disabled,onValueChange=_this$props.onValueChange,color=_this$props.color,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"value\",\"disabled\",\"onValueChange\",\"color\",\"theme\"]);var checkedColor=color||theme.colors.accent;var onTintColor=Platform.OS==='ios'?checkedColor:disabled?theme.dark?setColor(white).alpha(0.1).rgb().string():setColor(black).alpha(0.12).rgb().string():setColor(checkedColor).alpha(0.5).rgb().string();var thumbTintColor=Platform.OS==='ios'?undefined:disabled?theme.dark?grey800:grey400:value?checkedColor:theme.dark?grey400:grey50;var props=version&&version.major===0&&version.minor<=56?{onTintColor:onTintColor,thumbTintColor:thumbTintColor}:{thumbColor:thumbTintColor,trackColor:{true:onTintColor,false:''}};return React.createElement(NativeSwitch,_extends({value:value,disabled:disabled,onValueChange:disabled?undefined:onValueChange},props,rest,{__source:{fileName:_jsxFileName,lineNumber:147}}));}}]);return Switch;}(React.Component);export default withTheme(Switch);","map":{"version":3,"sources":["Switch.tsx"],"names":["version","NativeModules","Switch","React","Component","value","disabled","onValueChange","color","theme","rest","checkedColor","onTintColor","Platform","setColor","thumbTintColor","props","thumbColor","trackColor","true","false","withTheme"],"mappings":"gjBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,wB,mMAQA,MAAA,CAAA,QAAA,KAAA,OAAA,CACA,OAAA,SAAA,uBAGA,GAAMA,CAAAA,OAAO,CAAGC,aAAa,CAAbA,iBAAAA,CACZA,aAAa,CAAbA,iBAAAA,CADYA,kBAAAA,CAAhB,SAAA,CA0EMC,GAAAA,CAAAA,M,+PACK,CAAA,GAAA,CAAA,WAAA,CAQH,KARG,KAAA,CAELG,KAFK,CAAA,WAAA,CAAA,KAAA,CAGLC,QAHK,CAAA,WAAA,CAAA,QAAA,CAILC,aAJK,CAAA,WAAA,CAAA,aAAA,CAKLC,KALK,CAAA,WAAA,CAAA,KAAA,CAMLC,KANK,CAAA,WAAA,CAAA,KAAA,CAOFC,IAPE,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAUP,GAAMC,CAAAA,YAAY,CAAGH,KAAK,EAAIC,KAAK,CAALA,MAAAA,CAA9B,MAAA,CAEA,GAAMG,CAAAA,WAAW,CACfC,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,CAAAA,YAAAA,CAEIP,QAAQ,CACRG,KAAK,CAALA,IAAAA,CACEK,QAAQ,CAARA,KAAQ,CAARA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GADFL,MACEK,EADFL,CAKEK,QAAQ,CAARA,KAAQ,CAARA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GANM,MAMNA,EANM,CAURA,QAAQ,CAARA,YAAQ,CAARA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GAbN,MAaMA,EAbN,CAkBA,GAAMC,CAAAA,cAAc,CAClBF,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,CAAAA,SAAAA,CAEIP,QAAQ,CACRG,KAAK,CAALA,IAAAA,CAAAA,OAAAA,CADQ,OAAA,CAIRJ,KAAK,CAAA,YAAA,CAELI,KAAK,CAALA,IAAAA,CAAAA,OAAAA,CATN,MAAA,CAaA,GAAMO,CAAAA,KAAK,CACThB,OAAO,EAAIA,OAAO,CAAPA,KAAAA,GAAXA,CAAAA,EAAkCA,OAAO,CAAPA,KAAAA,EAAlCA,EAAAA,CACI,CACEY,WAAW,CADb,WAAA,CAEEG,cAAc,CAHpBf,cACI,CADJA,CAKI,CACEiB,UAAU,CADZ,cAAA,CAEEC,UAAU,CAAE,CACVC,IAAI,CADM,WAAA,CAEVC,KAAK,CAVf,EAQoB,CAFd,CANN,CAcA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CACE,KAAK,CADP,KAAA,CAEE,QAAQ,CAFV,QAAA,CAGE,aAAa,CAAEd,QAAQ,CAAA,SAAA,CAHzB,aAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,GACE,CAAA,CAAA,CAAA,CADF,C,qBA1DiBH,KAAK,CAACC,S,CAArBF,CAsEN,cAAemB,CAAAA,SAAS,CAAxB,MAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from '../styles/colors';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\ntype Props = React.ComponentProps<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states â€” on and off.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     isSwitchOn: false,\n *   };\n *\n *   render() {\n *     const { isSwitchOn } = this.state;\n *     return (\n *       <Switch\n *         value={isSwitchOn}\n *         onValueChange={() =>\n *           { this.setState({ isSwitchOn: !isSwitchOn }); }\n *         }\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Switch extends React.Component<Props> {\n  render() {\n    const {\n      value,\n      disabled,\n      onValueChange,\n      color,\n      theme,\n      ...rest\n    } = this.props;\n\n    const checkedColor = color || theme.colors.accent;\n\n    const onTintColor =\n      Platform.OS === 'ios'\n        ? checkedColor\n        : disabled\n        ? theme.dark\n          ? setColor(white)\n              .alpha(0.1)\n              .rgb()\n              .string()\n          : setColor(black)\n              .alpha(0.12)\n              .rgb()\n              .string()\n        : setColor(checkedColor)\n            .alpha(0.5)\n            .rgb()\n            .string();\n\n    const thumbTintColor =\n      Platform.OS === 'ios'\n        ? undefined\n        : disabled\n        ? theme.dark\n          ? grey800\n          : grey400\n        : value\n        ? checkedColor\n        : theme.dark\n        ? grey400\n        : grey50;\n\n    const props =\n      version && version.major === 0 && version.minor <= 56\n        ? {\n            onTintColor,\n            thumbTintColor,\n          }\n        : {\n            thumbColor: thumbTintColor,\n            trackColor: {\n              true: onTintColor,\n              false: '',\n            },\n          };\n\n    return (\n      <NativeSwitch\n        value={value}\n        disabled={disabled}\n        onValueChange={disabled ? undefined : onValueChange}\n        {...props}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport default withTheme(Switch);\n"]},"metadata":{},"sourceType":"module"}