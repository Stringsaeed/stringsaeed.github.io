{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Badge.tsx\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{black,white}from\"../styles/colors\";import{withTheme}from\"../core/theming\";var defaultSize=20;var Badge=function(_React$Component){_inherits(Badge,_React$Component);function Badge(){var _getPrototypeOf2;var _this;_classCallCheck(this,Badge);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Badge)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={opacity:new Animated.Value(_this.props.visible?1:0)};return _this;}_createClass(Badge,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var visible=this.props.visible;if(visible!==prevProps.visible){Animated.timing(this.state.opacity,{toValue:visible?1:0,duration:150,useNativeDriver:true}).start();}}},{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,_this$props$size=_this$props.size,size=_this$props$size===void 0?defaultSize:_this$props$size,style=_this$props.style,theme=_this$props.theme;var opacity=this.state.opacity;var _ref=StyleSheet.flatten(style)||{},_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?theme.colors.notification:_ref$backgroundColor,restStyle=_objectWithoutProperties(_ref,[\"backgroundColor\"]);var textColor=color(backgroundColor).isLight()?black:white;var borderRadius=size/2;return React.createElement(Animated.Text,{numberOfLines:1,style:[_objectSpread({opacity:opacity,backgroundColor:backgroundColor,color:textColor,fontSize:size*0.5},theme.fonts.regular,{lineHeight:size,height:size,minWidth:size,borderRadius:borderRadius}),styles.container,restStyle],__source:{fileName:_jsxFileName,lineNumber:89}},children);}}]);return Badge;}(React.Component);Badge.defaultProps={visible:true,size:defaultSize};export default withTheme(Badge);var styles=StyleSheet.create({container:{alignSelf:'flex-end',textAlign:'center',textAlignVertical:'center',paddingHorizontal:4,overflow:'hidden'}});","map":{"version":3,"sources":["Badge.tsx"],"names":["defaultSize","Badge","React","Component","defaultProps","visible","size","state","opacity","Animated","prevProps","toValue","duration","useNativeDriver","children","style","theme","backgroundColor","restStyle","StyleSheet","textColor","color","borderRadius","fontSize","lineHeight","height","minWidth","styles","withTheme","container","alignSelf","textAlign","textAlignVertical","paddingHorizontal","overflow"],"mappings":"yjBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,8HAQA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,KAAA,CAAA,KAAA,wBACA,OAAA,SAAA,uBAGA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,CA0CMC,GAAAA,CAAAA,K,0XAMJM,K,CAAQ,CACNC,OAAO,CAAE,GAAIC,CAAAA,QAAQ,CAAZ,KAAA,CAAmB,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CADtB,CACG,CADH,C,+FAIWC,S,CAAkB,CAAA,GAC3BL,CAAAA,OAD2B,CACf,KADe,KACf,CADe,OAAA,CAGnC,GAAIA,OAAO,GAAKK,SAAS,CAAzB,OAAA,CAAmC,CACjCD,QAAQ,CAARA,MAAAA,CAAgB,KAAA,KAAA,CAAhBA,OAAAA,CAAoC,CAClCE,OAAO,CAAEN,OAAO,CAAA,CAAA,CADkB,CAAA,CAElCO,QAAQ,CAF0B,GAAA,CAGlCC,eAAe,CAHjBJ,IAAoC,CAApCA,EAAAA,KAAAA,GAMH,C,wCAEQ,CAAA,GAAA,CAAA,WAAA,CACgD,KADhD,KAAA,CACCK,QADD,CAAA,WAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,IAAA,CACWR,IADX,CAAA,gBAAA,GAAA,IAAA,EAAA,CAAA,WAAA,CAAA,gBAAA,CAC+BS,KAD/B,CAAA,WAAA,CAAA,KAAA,CACsCC,KADtC,CAAA,WAAA,CAAA,KAAA,CAAA,GAECR,CAAAA,OAFD,CAEa,KAFb,KAEa,CAFb,OAAA,CAAA,GAAA,CAAA,IAAA,CAKLW,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GALK,EAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,eAAA,CAICF,eAJD,CAAA,oBAAA,GAAA,IAAA,EAAA,CAImBD,KAAK,CAALA,MAAAA,CAJnB,YAAA,CAAA,oBAAA,CAIiDE,SAJjD,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,CAMP,GAAME,CAAAA,SAAS,CAAGC,KAAK,CAALA,eAAK,CAALA,CAAAA,OAAAA,GAAAA,KAAAA,CAAlB,KAAA,CAEA,GAAMC,CAAAA,YAAY,CAAGhB,IAAI,CAAzB,CAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,CACE,aAAa,CADf,CAAA,CAEE,KAAK,CAAE,CAAA,aAAA,CAAA,CAEHE,OAAO,CAFJ,OAAA,CAGHS,eAAe,CAHZ,eAAA,CAIHI,KAAK,CAJF,SAAA,CAKHE,QAAQ,CAAEjB,IAAI,CALX,GAAA,CAAA,CAMAU,KAAK,CAALA,KAAAA,CANA,OAAA,CAAA,CAOHQ,UAAU,CAPP,IAAA,CAQHC,MAAM,CARH,IAAA,CASHC,QAAQ,CATL,IAAA,CAUHJ,YAAY,CAVT,YAAA,CAAA,CAAA,CAYLK,MAAM,CAZD,SAAA,CAFT,SAES,CAFT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CADF,QACE,CADF,C,oBAhCgBzB,KAAK,CAACC,S,CAApBF,CAAAA,K,CACGG,YADHH,CACkB,CACpBI,OAAO,CADa,IAAA,CAEpBC,IAAI,CAFgB,WAAA,CADlBL,CAyDN,cAAe2B,CAAAA,SAAS,CAAxB,KAAwB,CAAxB,CAEA,GAAMD,CAAAA,MAAM,CAAGR,UAAU,CAAVA,MAAAA,CAAkB,CAC/BU,SAAS,CAAE,CACTC,SAAS,CADA,UAAA,CAETC,SAAS,CAFA,QAAA,CAGTC,iBAAiB,CAHR,QAAA,CAITC,iBAAiB,CAJR,CAAA,CAKTC,QAAQ,CANZ,QACa,CADoB,CAAlBf,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  StyleProp,\n  TextInput,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\nconst defaultSize = 20;\n\ntype Props = React.ComponentProps<typeof TextInput> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Badge extends React.Component<Props, State> {\n  static defaultProps = {\n    visible: true,\n    size: defaultSize,\n  };\n\n  state = {\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { visible } = this.props;\n\n    if (visible !== prevProps.visible) {\n      Animated.timing(this.state.opacity, {\n        toValue: visible ? 1 : 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const { children, size = defaultSize, style, theme } = this.props;\n    const { opacity } = this.state;\n\n    const { backgroundColor = theme.colors.notification, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n    const textColor = color(backgroundColor).isLight() ? black : white;\n\n    const borderRadius = size / 2;\n\n    return (\n      <Animated.Text\n        numberOfLines={1}\n        style={[\n          {\n            opacity,\n            backgroundColor,\n            color: textColor,\n            fontSize: size * 0.5,\n            ...theme.fonts.regular,\n            lineHeight: size,\n            height: size,\n            minWidth: size,\n            borderRadius,\n          },\n          styles.container,\n          restStyle,\n        ]}\n      >\n        {children}\n      </Animated.Text>\n    );\n  }\n}\n\nexport default withTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}