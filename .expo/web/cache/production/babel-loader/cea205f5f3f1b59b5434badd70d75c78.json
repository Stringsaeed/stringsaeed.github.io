{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButtonItem.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{RadioButtonContext}from\"./RadioButtonGroup\";import{handlePress}from\"./utils\";import TouchableRipple from\"../TouchableRipple\";import RadioButton from\"./RadioButton\";var RadioButtonItem=function(_React$Component){_inherits(RadioButtonItem,_React$Component);function RadioButtonItem(){_classCallCheck(this,RadioButtonItem);return _possibleConstructorReturn(this,_getPrototypeOf(RadioButtonItem).apply(this,arguments));}_createClass(RadioButtonItem,[{key:\"render\",value:function render(){var _this$props=this.props,value=_this$props.value,label=_this$props.label,style=_this$props.style,_onPress=_this$props.onPress,status=_this$props.status;return React.createElement(RadioButtonContext.Consumer,{__source:{fileName:_jsxFileName,lineNumber:66}},function(context){return React.createElement(TouchableRipple,{onPress:function onPress(){return handlePress({onPress:_onPress,onValueChange:context&&context.onValueChange,value:value});},__source:{fileName:_jsxFileName,lineNumber:69}},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\",__source:{fileName:_jsxFileName,lineNumber:78}},React.createElement(Text,{__source:{fileName:_jsxFileName,lineNumber:79}},label),React.createElement(RadioButton,{value:value,status:status,__source:{fileName:_jsxFileName,lineNumber:80}})));});}}]);return RadioButtonItem;}(React.Component);RadioButtonItem.displayName='RadioButton.Item';export default RadioButtonItem;var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16}});","map":{"version":3,"sources":["RadioButtonItem.tsx"],"names":["RadioButtonItem","React","Component","displayName","value","label","style","onPress","status","handlePress","onValueChange","context","styles","StyleSheet","container","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal"],"mappings":"2bAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,2KAEA,OAAA,kBAAA,0BACA,OAAA,WAAA,eACA,MAAA,CAAA,eAAA,0BACA,MAAA,CAAA,WAAA,qBAqDMA,GAAAA,CAAAA,e,4SAGK,CAAA,GAAA,CAAA,WAAA,CAC0C,KAD1C,KAAA,CACCI,KADD,CAAA,WAAA,CAAA,KAAA,CACQC,KADR,CAAA,WAAA,CAAA,KAAA,CACeC,KADf,CAAA,WAAA,CAAA,KAAA,CACsBC,QADtB,CAAA,WAAA,CAAA,OAAA,CAC+BC,MAD/B,CAAA,WAAA,CAAA,MAAA,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACG,SAAA,OAAA,CAAsC,CACrC,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CACE,OAAO,CAAE,QAAA,CAAA,OAAA,EAAA,CAAA,MACPC,CAAAA,WAAW,CAAC,CACVF,OAAO,CADG,QAAA,CAEVG,aAAa,CAAEC,OAAO,EAAIA,OAAO,CAFvB,aAAA,CAGVP,KAAK,CAJA,KACK,CAAD,CADJ,CADX,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CASE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACQ,MAAM,CAAP,SAAA,CAAb,KAAa,CAAb,CAAwC,aAAa,CAArD,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CADF,KACE,CADF,CAEE,KAAA,CAAA,aAAA,CAAA,WAAA,CAAA,CAAa,KAAK,CAAlB,KAAA,CAA2B,MAAM,CAAjC,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAZN,EAYM,CAAA,CAAA,CAFF,CATF,CADF,CAHN,CACE,CADF,C,8BAN0BX,KAAK,CAACC,S,CAA9BF,CAAAA,e,CACGG,WADHH,CACiB,kBADjBA,CA+BN,cAAA,CAAA,eAAA,CAEA,GAAMY,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,aAAa,CADJ,KAAA,CAETC,UAAU,CAFD,QAAA,CAGTC,cAAc,CAHL,eAAA,CAITC,eAAe,CAJN,CAAA,CAKTC,iBAAiB,CANrB,EACa,CADoB,CAAlBN,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport RadioButton from './RadioButton';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'first',\n *   };\n *\n *   render() {\n *     return(\n *       <RadioButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *           <RadioButton.Item label=\"First item\" value=\"first\" />\n *           <RadioButton.Item label=\"Second item\" value=\"second\" />\n *       </RadioButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass RadioButtonItem extends React.Component<Props> {\n  static displayName = 'RadioButton.Item';\n\n  render() {\n    const { value, label, style, onPress, status } = this.props;\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          return (\n            <TouchableRipple\n              onPress={() =>\n                handlePress({\n                  onPress: onPress,\n                  onValueChange: context && context.onValueChange,\n                  value,\n                })\n              }\n            >\n              <View style={[styles.container, style]} pointerEvents=\"none\">\n                <Text>{label}</Text>\n                <RadioButton value={value} status={status}></RadioButton>\n              </View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default RadioButtonItem;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}