{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Drawer/DrawerSection.tsx\";import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"../Typography/Text\";import Divider from\"../Divider\";import{withTheme}from\"../../core/theming\";var DrawerSection=function(_React$Component){_inherits(DrawerSection,_React$Component);function DrawerSection(){_classCallCheck(this,DrawerSection);return _possibleConstructorReturn(this,_getPrototypeOf(DrawerSection).apply(this,arguments));}_createClass(DrawerSection,[{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,title=_this$props.title,theme=_this$props.theme,style=_this$props.style,rest=_objectWithoutProperties(_this$props,[\"children\",\"title\",\"theme\",\"style\"]);var colors=theme.colors,fonts=theme.fonts;var titleColor=color(colors.text).alpha(0.54).rgb().string();var font=fonts.medium;return React.createElement(View,_extends({style:[styles.container,style]},rest,{__source:{fileName:_jsxFileName,lineNumber:72}}),title&&React.createElement(View,{style:styles.titleContainer,__source:{fileName:_jsxFileName,lineNumber:74}},React.createElement(Text,{numberOfLines:1,style:_objectSpread({color:titleColor},font,{marginLeft:16}),__source:{fileName:_jsxFileName,lineNumber:75}},title)),children,React.createElement(Divider,{style:styles.divider,__source:{fileName:_jsxFileName,lineNumber:84}}));}}]);return DrawerSection;}(React.Component);DrawerSection.displayName='Drawer.Section';var styles=StyleSheet.create({container:{marginBottom:4},titleContainer:{height:40,justifyContent:'center'},divider:{marginTop:4}});export default withTheme(DrawerSection);","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","React","Component","displayName","children","title","theme","style","rest","colors","fonts","titleColor","color","font","styles","marginLeft","StyleSheet","container","marginBottom","titleContainer","height","justifyContent","divider","marginTop","withTheme"],"mappings":"6nBAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,IAAA,0BACA,MAAA,CAAA,OAAA,kBACA,OAAA,SAAA,0BAqDMA,GAAAA,CAAAA,a,kSAGK,CAAA,GAAA,CAAA,WAAA,CAC4C,KAD5C,KAAA,CACCI,QADD,CAAA,WAAA,CAAA,QAAA,CACWC,KADX,CAAA,WAAA,CAAA,KAAA,CACkBC,KADlB,CAAA,WAAA,CAAA,KAAA,CACyBC,KADzB,CAAA,WAAA,CAAA,KAAA,CACmCC,IADnC,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,UAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAECC,CAAAA,MAFD,CAEmBH,KAFnB,CAAA,MAAA,CAESI,KAFT,CAEmBJ,KAFnB,CAAA,KAAA,CAGP,GAAMK,CAAAA,UAAU,CAAGC,KAAK,CAACH,MAAM,CAAZG,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAnB,MAAmBA,EAAnB,CAIA,GAAMC,CAAAA,IAAI,CAAGH,KAAK,CAAlB,MAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAM,KAAK,CAAE,CAACI,MAAM,CAAP,SAAA,CAAb,KAAa,CAAb,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACGT,KAAK,EACJ,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAES,MAAM,CAAnB,cAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,aAAa,CADf,CAAA,CAEE,KAAK,CAAA,aAAA,CAAA,CAAIF,KAAK,CAAT,UAAA,CAAA,CAAA,IAAA,CAAA,CAAgCG,UAAU,CAFjD,EAEO,CAAA,CAFP,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAHN,KAGM,CADF,CAFJ,CAAA,QAAA,CAYE,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CAAS,KAAK,CAAED,MAAM,CAAtB,OAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAbJ,EAaI,CAAA,CAAA,CAZF,CADF,C,4BAZwBb,KAAK,CAACC,S,CAA5BF,CAAAA,a,CACGG,WADHH,CACiB,gBADjBA,CA+BN,GAAMc,CAAAA,MAAM,CAAGE,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,YAAY,CAFiB,CACpB,CADoB,CAI/BC,cAAc,CAAE,CACdC,MAAM,CADQ,EAAA,CAEdC,cAAc,CANe,QAIf,CAJe,CAQ/BC,OAAO,CAAE,CACPC,SAAS,CATb,CAQW,CARsB,CAAlBP,CAAf,CAaA,cAAeQ,CAAAA,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     active: 'first',\n *   };\n *\n *   render() {\n *     const { active } = this.state;\n *\n *     return (\n *       <Drawer.Section title=\"Some title\">\n *         <Drawer.Item\n *           label=\"First Item\"\n *           active={active === 'first'}\n *           onPress={() => { this.setState({ active: 'first' }); }}\n *         />\n *         <Drawer.Item\n *           label=\"Second Item\"\n *           active={active === 'second'}\n *           onPress={() => { this.setState({ active: 'second' }); }}\n *         />\n *      </Drawer.Section>\n *     );\n *   }\n * }\n * ```\n */\nclass DrawerSection extends React.Component<Props> {\n  static displayName = 'Drawer.Section';\n\n  render() {\n    const { children, title, theme, style, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const titleColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    const font = fonts.medium;\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        {title && (\n          <View style={styles.titleContainer}>\n            <Text\n              numberOfLines={1}\n              style={{ color: titleColor, ...font, marginLeft: 16 }}\n            >\n              {title}\n            </Text>\n          </View>\n        )}\n        {children}\n        <Divider style={styles.divider} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module"}