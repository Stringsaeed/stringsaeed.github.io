{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableRow.tsx\";import*as React from'react';import color from'color';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TouchableRipple from\"../TouchableRipple\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var DataTableRow=function(_React$Component){_inherits(DataTableRow,_React$Component);function DataTableRow(){_classCallCheck(this,DataTableRow);return _possibleConstructorReturn(this,_getPrototypeOf(DataTableRow).apply(this,arguments));}_createClass(DataTableRow,[{key:\"render\",value:function render(){var _this$props=this.props,onPress=_this$props.onPress,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"onPress\",\"style\",\"theme\"]);var borderBottomColor=color(theme.dark?white:black).alpha(0.12).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{onPress:onPress,style:[styles.container,{borderBottomColor:borderBottomColor},style],__source:{fileName:_jsxFileName,lineNumber:36}}),React.createElement(View,{style:styles.content,__source:{fileName:_jsxFileName,lineNumber:41}},this.props.children));}}]);return DataTableRow;}(React.Component);DataTableRow.displayName='DataTable.Row';var styles=StyleSheet.create({container:{borderStyle:'solid',borderBottomWidth:StyleSheet.hairlineWidth,minHeight:48,paddingHorizontal:16},content:{flex:1,flexDirection:'row'}});export default withTheme(DataTableRow);export{DataTableRow};","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","React","Component","displayName","onPress","style","theme","rest","borderBottomColor","color","styles","StyleSheet","container","borderStyle","borderBottomWidth","minHeight","paddingHorizontal","content","flex","flexDirection","withTheme"],"mappings":"gkBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,eAAA,0BACA,OAAA,KAAA,CAAA,KAAA,2BACA,OAAA,SAAA,0BAmBMA,GAAAA,CAAAA,Y,6RAGK,CAAA,GAAA,CAAA,WAAA,CACoC,KADpC,KAAA,CACCI,OADD,CAAA,WAAA,CAAA,OAAA,CACUC,KADV,CAAA,WAAA,CAAA,KAAA,CACiBC,KADjB,CAAA,WAAA,CAAA,KAAA,CAC2BC,IAD3B,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAEP,GAAMC,CAAAA,iBAAiB,CAAGC,KAAK,CAACH,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANG,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,OAAO,CAFT,OAAA,CAGE,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAmB,CAAEF,iBAAiB,CAAtC,iBAAmB,CAAnB,CAHT,KAGS,CAHT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAKE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEE,MAAM,CAAnB,OAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAA8B,KAAA,KAAA,CANlC,QAMI,CALF,CADF,C,2BAVuBT,KAAK,CAACC,S,CAA3BF,CAAAA,Y,CACGG,WADHH,CACiB,eADjBA,CAsBN,GAAMU,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,WAAW,CADF,OAAA,CAETC,iBAAiB,CAAEH,UAAU,CAFpB,aAAA,CAGTI,SAAS,CAHA,EAAA,CAITC,iBAAiB,CALY,EACpB,CADoB,CAO/BC,OAAO,CAAE,CACPC,IAAI,CADG,CAAA,CAEPC,aAAa,CATjB,KAOW,CAPsB,CAAlBR,CAAf,CAaA,cAAeS,CAAAA,SAAS,CAAxB,YAAwB,CAAxB,CAGA,OAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}