{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/List/ListSubheader.tsx\";import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";var ListSubheader=function(_React$Component){_inherits(ListSubheader,_React$Component);function ListSubheader(){_classCallCheck(this,ListSubheader);return _possibleConstructorReturn(this,_getPrototypeOf(ListSubheader).apply(this,arguments));}_createClass(ListSubheader,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"style\",\"theme\"]);var colors=theme.colors,fonts=theme.fonts;var font=fonts.medium;var textColor=color(colors.text).alpha(0.54).rgb().string();return React.createElement(Text,_extends({numberOfLines:1},rest,{style:[styles.container,_objectSpread({color:textColor},font),style],__source:{fileName:_jsxFileName,lineNumber:49}}));}}]);return ListSubheader;}(React.Component);ListSubheader.displayName='List.Subheader';var styles=StyleSheet.create({container:{paddingHorizontal:16,paddingVertical:13}});export default withTheme(ListSubheader);","map":{"version":3,"sources":["ListSubheader.tsx"],"names":["ListSubheader","React","Component","displayName","style","theme","rest","colors","fonts","font","textColor","color","styles","StyleSheet","container","paddingHorizontal","paddingVertical","withTheme"],"mappings":"2nBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iEAEA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,0BACA,OAAA,SAAA,0BA+BMA,GAAAA,CAAAA,a,kSAGK,CAAA,GAAA,CAAA,WAAA,CAC2B,KAD3B,KAAA,CACCI,KADD,CAAA,WAAA,CAAA,KAAA,CACQC,KADR,CAAA,WAAA,CAAA,KAAA,CACkBC,IADlB,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAECC,CAAAA,MAFD,CAEmBF,KAFnB,CAAA,MAAA,CAESG,KAFT,CAEmBH,KAFnB,CAAA,KAAA,CAGP,GAAMI,CAAAA,IAAI,CAAGD,KAAK,CAAlB,MAAA,CACA,GAAME,CAAAA,SAAS,CAAGC,KAAK,CAACJ,MAAM,CAAZI,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,aAAa,CADf,CAAA,CAAA,CAAA,IAAA,CAAA,CAGE,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAA,aAAA,CAAA,CAAqBD,KAAK,CAA1B,SAAA,CAAA,CAAA,IAAA,CAAA,CAHT,KAGS,CAHT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,C,4BAZwBV,KAAK,CAACC,S,CAA5BF,CAAAA,a,CACGG,WADHH,CACiB,gBADjBA,CAsBN,GAAMY,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,iBAAiB,CADR,EAAA,CAETC,eAAe,CAHnB,EACa,CADoB,CAAlBH,CAAf,CAOA,cAAeI,CAAAA,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *  render () {\n *    return <List.Subheader>My List Title</List.Subheader>;\n *  }\n * }\n *\n * export default MyComponent;\n * ```\n */\nclass ListSubheader extends React.Component<Props> {\n  static displayName = 'List.Subheader';\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const font = fonts.medium;\n    const textColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n\n    return (\n      <Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.container, { color: textColor, ...font }, style]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]},"metadata":{},"sourceType":"module"}