{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarHeader.tsx\";import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import overlay from\"../../styles/overlay\";import Appbar,{DEFAULT_APPBAR_HEIGHT}from\"./Appbar\";import shadow from\"../../styles/shadow\";import{withTheme}from\"../../core/theming\";import{APPROX_STATUSBAR_HEIGHT}from\"../../constants\";import color from'color';var AppbarHeader=function(_React$Component){_inherits(AppbarHeader,_React$Component);function AppbarHeader(){_classCallCheck(this,AppbarHeader);return _possibleConstructorReturn(this,_getPrototypeOf(AppbarHeader).apply(this,arguments));}_createClass(AppbarHeader,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$statusBar=_this$props.statusBarHeight,statusBarHeight=_this$props$statusBar===void 0?APPROX_STATUSBAR_HEIGHT:_this$props$statusBar,style=_this$props.style,dark=_this$props.dark,rest=_objectWithoutProperties(_this$props,[\"statusBarHeight\",\"style\",\"dark\"]);var _rest$theme=rest.theme,isDarkTheme=_rest$theme.dark,colors=_rest$theme.colors,mode=_rest$theme.mode;var _ref=StyleSheet.flatten(style)||{},_ref$height=_ref.height,height=_ref$height===void 0?DEFAULT_APPBAR_HEIGHT:_ref$height,_ref$elevation=_ref.elevation,elevation=_ref$elevation===void 0?4:_ref$elevation,customBackground=_ref.backgroundColor,_ref$zIndex=_ref.zIndex,zIndex=_ref$zIndex===void 0?0:_ref$zIndex,restStyle=_objectWithoutProperties(_ref,[\"height\",\"elevation\",\"backgroundColor\",\"zIndex\"]);var backgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.primary;var Wrapper=typeof this.props.statusBarHeight==='number'?View:SafeAreaView;var isDark;if(typeof dark==='boolean'){isDark=dark;}else{isDark=backgroundColor==='transparent'?false:!color(backgroundColor).isLight();}StatusBar.setBarStyle(isDark?'light-content':'dark-content');return React.createElement(Wrapper,{style:[{backgroundColor:backgroundColor,zIndex:zIndex,elevation:elevation},shadow(elevation)],__source:{fileName:_jsxFileName,lineNumber:125}},React.createElement(Appbar,_extends({style:[{height:height,backgroundColor:backgroundColor,marginTop:statusBarHeight},styles.appbar,restStyle],dark:dark},rest,{__source:{fileName:_jsxFileName,lineNumber:134}})));}}]);return AppbarHeader;}(React.Component);AppbarHeader.displayName='Appbar.Header';var styles=StyleSheet.create({appbar:{elevation:0}});export default withTheme(AppbarHeader);export{AppbarHeader};","map":{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","React","Component","displayName","statusBarHeight","style","dark","rest","isDarkTheme","colors","mode","height","elevation","customBackground","zIndex","restStyle","StyleSheet","backgroundColor","overlay","Wrapper","isDark","color","StatusBar","shadow","marginTop","styles","appbar","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n  StatusBar,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\nimport color from 'color';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   _goBack = () => console.log('Went back');\n *\n *   _handleSearch = () => console.log('Searching');\n *\n *   _handleMore = () => console.log('Shown more');\n *\n *   render() {\n *     return (\n *       <Appbar.Header>\n *         <Appbar.BackAction\n *           onPress={this._goBack}\n *         />\n *         <Appbar.Content\n *           title=\"Title\"\n *           subtitle=\"Subtitle\"\n *         />\n *         <Appbar.Action icon=\"search\" onPress={this._handleSearch} />\n *         <Appbar.Action icon=\"more-vert\" onPress={this._handleMore} />\n *       </Appbar.Header>\n *     );\n *   }\n * }\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      dark,\n      ...rest\n    } = this.props;\n    const { dark: isDarkTheme, colors, mode } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      backgroundColor: customBackground,\n      zIndex = 0,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n    let isDark;\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark =\n        backgroundColor === 'transparent'\n          ? false\n          : !color(backgroundColor).isLight();\n    }\n    StatusBar.setBarStyle(isDark ? 'light-content' : 'dark-content');\n\n    return (\n      <Wrapper\n        style={\n          [\n            { backgroundColor, zIndex, elevation },\n            shadow(elevation),\n          ] as StyleProp<ViewStyle>\n        }\n      >\n        {/* $FlowFixMe: There seems to be conflict between Appbar's props and Header's props */}\n        <Appbar\n          //@ts-ignore\n          style={[\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          dark={dark}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"]},"metadata":{},"sourceType":"module"}