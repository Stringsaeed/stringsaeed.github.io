{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Divider.tsx\";import*as React from'react';import color from'color';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withTheme}from\"../core/theming\";import{black,white}from\"../styles/colors\";var Divider=function(_React$Component){_inherits(Divider,_React$Component);function Divider(){_classCallCheck(this,Divider);return _possibleConstructorReturn(this,_getPrototypeOf(Divider).apply(this,arguments));}_createClass(Divider,[{key:\"render\",value:function render(){var _this$props=this.props,inset=_this$props.inset,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"inset\",\"style\",\"theme\"]);var isDarkTheme=theme.dark;return React.createElement(View,_extends({},rest,{style:[isDarkTheme?styles.dark:styles.light,inset&&styles.inset,style],__source:{fileName:_jsxFileName,lineNumber:46}}));}}]);return Divider;}(React.Component);var styles=StyleSheet.create({light:{backgroundColor:color(black).alpha(0.12).rgb().string(),height:StyleSheet.hairlineWidth},dark:{backgroundColor:color(white).alpha(0.12).rgb().string(),height:StyleSheet.hairlineWidth},inset:{marginLeft:72}});export default withTheme(Divider);","map":{"version":3,"sources":["Divider.tsx"],"names":["Divider","React","Component","inset","style","theme","rest","isDarkTheme","styles","StyleSheet","light","backgroundColor","color","height","dark","marginLeft","withTheme"],"mappings":"ijBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,KAAA,KAAA,OAAA,C,sHAEA,OAAA,SAAA,uBACA,OAAA,KAAA,CAAA,KAAA,wBAoCMA,GAAAA,CAAAA,O,oQACK,CAAA,GAAA,CAAA,WAAA,CACkC,KADlC,KAAA,CACCG,KADD,CAAA,WAAA,CAAA,KAAA,CACQC,KADR,CAAA,WAAA,CAAA,KAAA,CACeC,KADf,CAAA,WAAA,CAAA,KAAA,CACyBC,IADzB,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAEOC,CAAAA,WAFP,CAEuBF,KAFvB,CAAA,IAAA,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CACLE,WAAW,CAAGC,MAAM,CAAT,IAAA,CAAiBA,MAAM,CAD7B,KAAA,CAELL,KAAK,EAAIK,MAAM,CAFV,KAAA,CAFT,KAES,CAFT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,C,sBAJkBP,KAAK,CAACC,S,CAAtBF,CAiBN,GAAMQ,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,KAAK,CAAE,CACLC,eAAe,CAAEC,KAAK,CAALA,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GADZ,MACYA,EADZ,CAKLC,MAAM,CAAEJ,UAAU,CANW,aACxB,CADwB,CAQ/BK,IAAI,CAAE,CACJH,eAAe,CAAEC,KAAK,CAALA,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GADb,MACaA,EADb,CAKJC,MAAM,CAAEJ,UAAU,CAbW,aAQzB,CARyB,CAe/BN,KAAK,CAAE,CACLY,UAAU,CAhBd,EAeS,CAfwB,CAAlBN,CAAf,CAoBA,cAAeO,CAAAA,SAAS,CAAxB,OAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport { Theme, $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Apple</Text>\n *     <Divider />\n *     <Text>Orange</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Divider extends React.Component<Props> {\n  render() {\n    const { inset, style, theme, ...rest } = this.props;\n    const { dark: isDarkTheme } = theme;\n    return (\n      <View\n        {...rest}\n        style={[\n          isDarkTheme ? styles.dark : styles.light,\n          inset && styles.inset,\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black)\n      .alpha(0.12)\n      .rgb()\n      .string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white)\n      .alpha(0.12)\n      .rgb()\n      .string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n"]},"metadata":{},"sourceType":"module"}