{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/List/ListAccordion.tsx\";import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableRipple from\"../TouchableRipple\";import Icon from\"../Icon\";import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{ListAccordionGroupContext}from\"./ListAccordionGroup\";var ListAccordion=function(_React$Component){_inherits(ListAccordion,_React$Component);function ListAccordion(){var _getPrototypeOf2;var _this;_classCallCheck(this,ListAccordion);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ListAccordion)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={expanded:_this.props.expanded||false};_this.handlePress=function(){_this.props.onPress&&_this.props.onPress();if(_this.props.expanded===undefined){_this.setState(function(state){return{expanded:!state.expanded};});}};return _this;}_createClass(ListAccordion,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,left=_this$props.left,title=_this$props.title,description=_this$props.description,children=_this$props.children,theme=_this$props.theme,titleStyle=_this$props.titleStyle,descriptionStyle=_this$props.descriptionStyle,titleNumberOfLines=_this$props.titleNumberOfLines,descriptionNumberOfLines=_this$props.descriptionNumberOfLines,style=_this$props.style,id=_this$props.id;var titleColor=color(theme.colors.text).alpha(0.87).rgb().string();var descriptionColor=color(theme.colors.text).alpha(0.54).rgb().string();var expandedInternal=this.props.expanded!==undefined?this.props.expanded:this.state.expanded;return React.createElement(ListAccordionGroupContext.Consumer,{__source:{fileName:_jsxFileName,lineNumber:189}},function(groupContext){if(groupContext!==null&&!id){throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');}var expanded=groupContext?groupContext.expandedId===id:expandedInternal;var handlePress=groupContext&&id!==undefined?function(){return groupContext.onAccordionPress(id);}:_this2.handlePress;return React.createElement(View,{__source:{fileName:_jsxFileName,lineNumber:204}},React.createElement(TouchableRipple,{style:[styles.container,style],onPress:handlePress,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",__source:{fileName:_jsxFileName,lineNumber:205}},React.createElement(View,{style:styles.row,pointerEvents:\"none\",__source:{fileName:_jsxFileName,lineNumber:212}},left?left({color:expanded?theme.colors.primary:descriptionColor}):null,React.createElement(View,{style:[styles.item,styles.content],__source:{fileName:_jsxFileName,lineNumber:220}},React.createElement(Text,{numberOfLines:titleNumberOfLines,style:[styles.title,{color:expanded?theme.colors.primary:titleColor},titleStyle],__source:{fileName:_jsxFileName,lineNumber:221}},title),description&&React.createElement(Text,{numberOfLines:descriptionNumberOfLines,style:[styles.description,{color:descriptionColor},descriptionStyle],__source:{fileName:_jsxFileName,lineNumber:234}},description)),React.createElement(View,{style:[styles.item,description?styles.multiline:undefined],__source:{fileName:_jsxFileName,lineNumber:248}},React.createElement(Icon,{source:expanded?'chevron-up':'chevron-down',color:titleColor,size:24,__source:{fileName:_jsxFileName,lineNumber:254}})))),expanded?React.Children.map(children,function(child){if(left&&React.isValidElement(child)&&!child.props.left&&!child.props.right){return React.cloneElement(child,{style:[styles.child,child.props.style]});}return child;}):null);});}}]);return ListAccordion;}(React.Component);ListAccordion.displayName='List.Accordion';ListAccordion.defaultProps={titleNumberOfLines:1,descriptionNumberOfLines:2};var styles=StyleSheet.create({container:{padding:8},row:{flexDirection:'row',alignItems:'center'},multiline:{height:40,alignItems:'center',justifyContent:'center'},title:{fontSize:16},description:{fontSize:14},item:{margin:8},child:{paddingLeft:64},content:{flex:1,justifyContent:'center'}});export default withTheme(ListAccordion);","map":{"version":3,"sources":["ListAccordion.tsx"],"names":["ListAccordion","React","Component","displayName","defaultProps","titleNumberOfLines","descriptionNumberOfLines","state","expanded","handlePress","left","title","description","children","theme","titleStyle","descriptionStyle","style","id","titleColor","color","descriptionColor","expandedInternal","groupContext","styles","child","StyleSheet","container","padding","row","flexDirection","alignItems","multiline","height","justifyContent","fontSize","item","margin","paddingLeft","content","flex","withTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nimport {\n  ListAccordionGroupContext,\n  ListAccordionGroupContextType,\n} from './ListAccordionGroup';\n\ntype Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n};\n\ntype State = {\n  expanded: boolean;\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Checkbox } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *   state = {\n *     expanded: true\n *   }\n *\n *   _handlePress = () =>\n *     this.setState({\n *       expanded: !this.state.expanded\n *     });\n *\n *   render() {\n *     return (\n *       <List.Section title=\"Accordions\">\n *         <List.Accordion\n *           title=\"Uncontrolled Accordion\"\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\n *         >\n *           <List.Item title=\"First item\" />\n *           <List.Item title=\"Second item\" />\n *         </List.Accordion>\n *\n *         <List.Accordion\n *           title=\"Controlled Accordion\"\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\n *           expanded={this.state.expanded}\n *           onPress={this._handlePress}\n *         >\n *           <List.Item title=\"First item\" />\n *           <List.Item title=\"Second item\" />\n *         </List.Accordion>\n *       </List.Section>\n *     );\n *   }\n * }\n *\n * export default MyComponent;\n * ```\n */\nclass ListAccordion extends React.Component<Props, State> {\n  static displayName = 'List.Accordion';\n\n  static defaultProps: Partial<Props> = {\n    titleNumberOfLines: 1,\n    descriptionNumberOfLines: 2,\n  };\n\n  state = {\n    expanded: this.props.expanded || false,\n  };\n\n  private handlePress = () => {\n    this.props.onPress && this.props.onPress();\n\n    if (this.props.expanded === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      this.setState(state => ({\n        expanded: !state.expanded,\n      }));\n    }\n  };\n\n  render() {\n    const {\n      left,\n      title,\n      description,\n      children,\n      theme,\n      titleStyle,\n      descriptionStyle,\n      titleNumberOfLines,\n      descriptionNumberOfLines,\n      style,\n      id,\n    } = this.props;\n    const titleColor = color(theme.colors.text)\n      .alpha(0.87)\n      .rgb()\n      .string();\n    const descriptionColor = color(theme.colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n\n    const expandedInternal =\n      this.props.expanded !== undefined\n        ? this.props.expanded\n        : this.state.expanded;\n\n    return (\n      <ListAccordionGroupContext.Consumer>\n        {(groupContext: ListAccordionGroupContextType) => {\n          if (groupContext !== null && !id) {\n            throw new Error(\n              'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n            );\n          }\n          const expanded = groupContext\n            ? groupContext.expandedId === id\n            : expandedInternal;\n          const handlePress =\n            groupContext && id !== undefined\n              ? () => groupContext.onAccordionPress(id)\n              : this.handlePress;\n          return (\n            <View>\n              <TouchableRipple\n                style={[styles.container, style]}\n                onPress={handlePress}\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n              >\n                <View style={styles.row} pointerEvents=\"none\">\n                  {left\n                    ? left({\n                        color: expanded\n                          ? theme.colors.primary\n                          : descriptionColor,\n                      })\n                    : null}\n                  <View style={[styles.item, styles.content]}>\n                    <Text\n                      numberOfLines={titleNumberOfLines}\n                      style={[\n                        styles.title,\n                        {\n                          color: expanded ? theme.colors.primary : titleColor,\n                        },\n                        titleStyle,\n                      ]}\n                    >\n                      {title}\n                    </Text>\n                    {description && (\n                      <Text\n                        numberOfLines={descriptionNumberOfLines}\n                        style={[\n                          styles.description,\n                          {\n                            color: descriptionColor,\n                          },\n                          descriptionStyle,\n                        ]}\n                      >\n                        {description}\n                      </Text>\n                    )}\n                  </View>\n                  <View\n                    style={[\n                      styles.item,\n                      description ? styles.multiline : undefined,\n                    ]}\n                  >\n                    <Icon\n                      source={expanded ? 'chevron-up' : 'chevron-down'}\n                      color={titleColor}\n                      size={24}\n                    />\n                  </View>\n                </View>\n              </TouchableRipple>\n              {expanded\n                ? React.Children.map(children, child => {\n                    if (\n                      left &&\n                      React.isValidElement(child) &&\n                      !child.props.left &&\n                      !child.props.right\n                    ) {\n                      return React.cloneElement(child, {\n                        style: [styles.child, child.props.style],\n                      });\n                    }\n\n                    return child;\n                  })\n                : null}\n            </View>\n          );\n        }}\n      </ListAccordionGroupContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    margin: 8,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(ListAccordion);\n"]},"metadata":{},"sourceType":"module"}