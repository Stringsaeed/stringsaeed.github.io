{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Searchbar.tsx\";import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import color from'color';import IconButton from\"./IconButton\";import Surface from\"./Surface\";import{withTheme}from\"../core/theming\";import MaterialCommunityIcon from\"./MaterialCommunityIcon\";var Searchbar=function(_React$Component){_inherits(Searchbar,_React$Component);function Searchbar(){var _getPrototypeOf2;var _this;_classCallCheck(this,Searchbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Searchbar)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleClearPress=function(){_this.clear();_this.props.onChangeText&&_this.props.onChangeText('');};return _this;}_createClass(Searchbar,[{key:\"setNativeProps\",value:function setNativeProps(args){return this.root&&this.root.setNativeProps(args);}},{key:\"isFocused\",value:function isFocused(){return this.root&&this.root.isFocused();}},{key:\"clear\",value:function clear(){return this.root&&this.root.clear();}},{key:\"focus\",value:function focus(){return this.root&&this.root.focus();}},{key:\"blur\",value:function blur(){return this.root&&this.root.blur();}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,placeholder=_this$props.placeholder,onIconPress=_this$props.onIconPress,icon=_this$props.icon,value=_this$props.value,theme=_this$props.theme,style=_this$props.style,customIconColor=_this$props.iconColor,clearIcon=_this$props.clearIcon,inputStyle=_this$props.inputStyle,rest=_objectWithoutProperties(_this$props,[\"placeholder\",\"onIconPress\",\"icon\",\"value\",\"theme\",\"style\",\"iconColor\",\"clearIcon\",\"inputStyle\"]);var colors=theme.colors,roundness=theme.roundness,dark=theme.dark,fonts=theme.fonts;var textColor=colors.text;var font=fonts.regular;var iconColor=customIconColor||(dark?textColor:color(textColor).alpha(0.54).rgb().string());var rippleColor=color(textColor).alpha(0.32).rgb().string();return React.createElement(Surface,{style:[{borderRadius:roundness,elevation:4},styles.container,style],__source:{fileName:_jsxFileName,lineNumber:162}},React.createElement(IconButton,{borderless:true,rippleColor:rippleColor,onPress:onIconPress,color:iconColor,icon:icon||function(_ref){var size=_ref.size,color=_ref.color;return React.createElement(MaterialCommunityIcon,{name:\"magnify\",color:color,size:size,direction:I18nManager.isRTL?'rtl':'ltr',__source:{fileName:_jsxFileName,lineNumber:177}});},__source:{fileName:_jsxFileName,lineNumber:169}}),React.createElement(TextInput,_extends({style:[styles.input,_objectSpread({color:textColor},font),inputStyle],placeholder:placeholder||'',placeholderTextColor:colors.placeholder,selectionColor:colors.primary,underlineColorAndroid:\"transparent\",returnKeyType:\"search\",keyboardAppearance:dark?'dark':'light',accessibilityTraits:\"search\",accessibilityRole:\"search\",ref:function ref(c){_this2.root=c;},value:value},rest,{__source:{fileName:_jsxFileName,lineNumber:186}})),React.createElement(IconButton,{borderless:true,disabled:!value,color:value?iconColor:'rgba(255, 255, 255, 0)',rippleColor:rippleColor,onPress:this.handleClearPress,icon:clearIcon||function(_ref2){var size=_ref2.size,color=_ref2.color;return React.createElement(MaterialCommunityIcon,{name:\"close\",color:color,size:size,direction:I18nManager.isRTL?'rtl':'ltr',__source:{fileName:_jsxFileName,lineNumber:211}});},accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",__source:{fileName:_jsxFileName,lineNumber:202}}));}}]);return Searchbar;}(React.Component);var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center'},input:{flex:1,fontSize:18,paddingLeft:8,alignSelf:'stretch',textAlign:I18nManager.isRTL?'right':'left',minWidth:0}});export default withTheme(Searchbar);","map":{"version":3,"sources":["Searchbar.tsx"],"names":["Searchbar","React","Component","handleClearPress","args","placeholder","onIconPress","icon","value","theme","style","customIconColor","clearIcon","inputStyle","rest","colors","roundness","dark","fonts","textColor","font","iconColor","color","rippleColor","borderRadius","elevation","styles","size","I18nManager","StyleSheet","container","flexDirection","alignItems","input","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","withTheme"],"mappings":"knBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mMAUA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,UAAA,oBACA,MAAA,CAAA,OAAA,iBACA,OAAA,SAAA,uBAGA,MAAA,CAAA,qBAAA,+BAyEMA,GAAAA,CAAAA,S,0YACIG,gB,CAAmB,UAAM,CAC/B,KAAA,CAAA,KAAA,GACA,KAAA,CAAA,KAAA,CAAA,YAAA,EAA2B,KAAA,CAAA,KAAA,CAAA,YAAA,CAA3B,EAA2B,CAA3B,C,4FAOiBC,I,CAAc,CAC/B,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAAA,cAAA,CAApB,IAAoB,CAApB,C,8CAMU,CACV,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,SAAoB,EAApB,C,sCAMM,CACN,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,KAAoB,EAApB,C,sCAMM,CACN,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,KAAoB,EAApB,C,oCAMK,CACL,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,IAAoB,EAApB,C,wCAGO,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,WAAA,CAYH,KAZG,KAAA,CAELC,WAFK,CAAA,WAAA,CAAA,WAAA,CAGLC,WAHK,CAAA,WAAA,CAAA,WAAA,CAILC,IAJK,CAAA,WAAA,CAAA,IAAA,CAKLC,KALK,CAAA,WAAA,CAAA,KAAA,CAMLC,KANK,CAAA,WAAA,CAAA,KAAA,CAOLC,KAPK,CAAA,WAAA,CAAA,KAAA,CAQMC,eARN,CAAA,WAAA,CAAA,SAAA,CASLC,SATK,CAAA,WAAA,CAAA,SAAA,CAULC,UAVK,CAAA,WAAA,CAAA,UAAA,CAWFC,IAXE,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,CAAA,CAAA,GAaCC,CAAAA,MAbD,CAaoCN,KAbpC,CAAA,MAAA,CAaSO,SAbT,CAaoCP,KAbpC,CAAA,SAAA,CAaoBQ,IAbpB,CAaoCR,KAbpC,CAAA,IAAA,CAa0BS,KAb1B,CAaoCT,KAbpC,CAAA,KAAA,CAcP,GAAMU,CAAAA,SAAS,CAAGJ,MAAM,CAAxB,IAAA,CACA,GAAMK,CAAAA,IAAI,CAAGF,KAAK,CAAlB,OAAA,CACA,GAAMG,CAAAA,SAAS,CACbV,eAAe,GACdM,IAAI,CAAA,SAAA,CAEDK,KAAK,CAALA,SAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAJN,MAIMA,EAHW,CADjB,CAQA,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAALA,SAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAApB,MAAoBA,EAApB,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACE,KAAK,CAAE,CACL,CAAEE,YAAY,CAAd,SAAA,CAA2BC,SAAS,CAD/B,CACL,CADK,CAELC,MAAM,CAFD,SAAA,CADT,KACS,CADT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAOE,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,WAAW,CAFb,WAAA,CAGE,OAAO,CAHT,WAAA,CAIE,KAAK,CAJP,SAAA,CAKE,IAAI,CACFnB,IAAI,EACH,SAAA,IAAA,CAAA,CAAA,GAAGoB,CAAAA,IAAH,CAAA,IAAA,CAAA,IAAA,CAASL,KAAT,CAAA,IAAA,CAAA,KAAA,CAAA,MACC,CAAA,KAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,CACE,IAAI,CADN,SAAA,CAEE,KAAK,CAFP,KAAA,CAGE,IAAI,CAHN,IAAA,CAIE,SAAS,CAAEM,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAJb,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADD,GACC,CAAA,CAAA,CADD,CAPL,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAPF,GAOE,CAAA,CAAA,CAPF,CAwBE,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CAACF,MAAM,CAAP,KAAA,CAAA,aAAA,CAAA,CAAiBJ,KAAK,CAAtB,SAAA,CAAA,CAAA,IAAA,CAAA,CADT,UACS,CADT,CAEE,WAAW,CAAEjB,WAAW,EAF1B,EAAA,CAGE,oBAAoB,CAAEU,MAAM,CAH9B,WAAA,CAIE,cAAc,CAAEA,MAAM,CAJxB,OAAA,CAKE,qBAAqB,CALvB,aAAA,CAME,aAAa,CANf,QAAA,CAOE,kBAAkB,CAAEE,IAAI,CAAA,MAAA,CAP1B,OAAA,CAQE,mBAAmB,CARrB,QAAA,CASE,iBAAiB,CATnB,QAAA,CAUE,GAAG,CAAE,QAAA,CAAA,GAAA,CAAA,CAAA,CAAK,CACR,MAAI,CAAJ,IAAA,CAAA,CAAA,CAXJ,CAAA,CAaE,KAAK,CAbP,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAxBF,GAwBE,CAAA,CAAA,CAAA,CAxBF,CAwCE,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,QAAQ,CAAE,CAFZ,KAAA,CAGE,KAAK,CAAET,KAAK,CAAA,SAAA,CAHd,wBAAA,CAIE,WAAW,CAJb,WAAA,CAKE,OAAO,CAAE,KALX,gBAAA,CAME,IAAI,CACFI,SAAS,EACR,SAAA,KAAA,CAAA,CAAA,GAAGe,CAAAA,IAAH,CAAA,KAAA,CAAA,IAAA,CAASL,KAAT,CAAA,KAAA,CAAA,KAAA,CAAA,MACC,CAAA,KAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,CACE,IAAI,CADN,OAAA,CAEE,KAAK,CAFP,KAAA,CAGE,IAAI,CAHN,IAAA,CAIE,SAAS,CAAEM,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAJb,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADD,GACC,CAAA,CAAA,CADD,CARL,CAAA,CAiBE,mBAAmB,CAjBrB,QAAA,CAkBE,0BAA0B,CAlB5B,QAAA,CAmBE,iBAAiB,CAnBnB,QAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAzCJ,GAyCI,CAAA,CAAA,CAxCF,CADF,C,wBAvEoB3B,KAAK,CAACC,S,CAAxBF,CA0IN,GAAM0B,CAAAA,MAAM,CAAGG,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,aAAa,CADJ,KAAA,CAETC,UAAU,CAHmB,QACpB,CADoB,CAK/BC,KAAK,CAAE,CACLC,IAAI,CADC,CAAA,CAELC,QAAQ,CAFH,EAAA,CAGLC,WAAW,CAHN,CAAA,CAILC,SAAS,CAJJ,SAAA,CAKLC,SAAS,CAAEV,WAAW,CAAXA,KAAAA,CAAAA,OAAAA,CALN,MAAA,CAMLW,QAAQ,CAXZ,CAKS,CALwB,CAAlBV,CAAf,CAeA,cAAeW,CAAAA,SAAS,CAAxB,SAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  TextInput,\n  I18nManager,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport IconButton from './IconButton';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\nimport { IconSource } from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\n\ntype Props = React.ComponentProps<typeof TextInput> & {\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: () => void;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Custom icon for clear button, default will be icon close\n   */\n  clearIcon?: IconSource;\n};\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     firstQuery: '',\n *   };\n *\n *   render() {\n *     const { firstQuery } = this.state;\n *     return (\n *       <Searchbar\n *         placeholder=\"Search\"\n *         onChangeText={query => { this.setState({ firstQuery: query }); }}\n *         value={firstQuery}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Searchbar extends React.Component<Props> {\n  private handleClearPress = () => {\n    this.clear();\n    this.props.onChangeText && this.props.onChangeText('');\n  };\n\n  private root: TextInput | undefined | null;\n\n  /**\n   * @internal\n   */ setNativeProps(args: Object) {\n    return this.root && this.root.setNativeProps(args);\n  }\n\n  /**\n   * Returns `true` if the input is currently focused, `false` otherwise.\n   */\n  isFocused() {\n    return this.root && this.root.isFocused();\n  }\n\n  /**\n   * Removes all text from the TextInput.\n   */\n  clear() {\n    return this.root && this.root.clear();\n  }\n\n  /**\n   * Focuses the input.\n   */\n  focus() {\n    return this.root && this.root.focus();\n  }\n\n  /**\n   * Removes focus from the input.\n   */\n  blur() {\n    return this.root && this.root.blur();\n  }\n\n  render() {\n    const {\n      placeholder,\n      onIconPress,\n      icon,\n      value,\n      theme,\n      style,\n      iconColor: customIconColor,\n      clearIcon,\n      inputStyle,\n      ...rest\n    } = this.props;\n    const { colors, roundness, dark, fonts } = theme;\n    const textColor = colors.text;\n    const font = fonts.regular;\n    const iconColor =\n      customIconColor ||\n      (dark\n        ? textColor\n        : color(textColor)\n            .alpha(0.54)\n            .rgb()\n            .string());\n    const rippleColor = color(textColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness, elevation: 4 },\n          styles.container,\n          style,\n        ]}\n      >\n        <IconButton\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          color={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n        />\n        <TextInput\n          style={[styles.input, { color: textColor, ...font }, inputStyle]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={colors.placeholder}\n          selectionColor={colors.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityTraits=\"search\"\n          accessibilityRole=\"search\"\n          ref={c => {\n            this.root = c;\n          }}\n          value={value}\n          {...rest}\n        />\n        <IconButton\n          borderless\n          disabled={!value}\n          color={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n          rippleColor={rippleColor}\n          onPress={this.handleClearPress}\n          icon={\n            clearIcon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"close\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n        />\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n});\n\nexport default withTheme(Searchbar);\n"]},"metadata":{},"sourceType":"module"}