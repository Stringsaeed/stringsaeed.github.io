{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButton.tsx\";import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import RadioButtonGroup from\"./RadioButtonGroup\";import RadioButtonAndroid from\"./RadioButtonAndroid\";import RadioButtonIOS from\"./RadioButtonIOS\";import RadioButtonItem from\"./RadioButtonItem\";import{withTheme}from\"../../core/theming\";var RadioButton=function(_React$Component){_inherits(RadioButton,_React$Component);function RadioButton(){_classCallCheck(this,RadioButton);return _possibleConstructorReturn(this,_getPrototypeOf(RadioButton).apply(this,arguments));}_createClass(RadioButton,[{key:\"render\",value:function render(){var Button=Platform.select({default:RadioButtonAndroid,ios:RadioButtonIOS});return React.createElement(Button,_extends({},this.props,{__source:{fileName:_jsxFileName,lineNumber:114}}));}}]);return RadioButton;}(React.Component);RadioButton.Group=RadioButtonGroup;RadioButton.Android=RadioButtonAndroid;RadioButton.IOS=RadioButtonIOS;RadioButton.Item=RadioButtonItem;export default withTheme(RadioButton);","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","React","Component","Group","RadioButtonGroup","Android","RadioButtonAndroid","IOS","RadioButtonIOS","Item","RadioButtonItem","Button","Platform","default","ios","withTheme"],"mappings":"4eAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,6DAEA,MAAA,CAAA,gBAAA,0BACA,MAAA,CAAA,kBAAA,4BACA,MAAA,CAAA,cAAA,wBACA,MAAA,CAAA,eAAA,yBACA,OAAA,SAAA,0BAwFMA,GAAAA,CAAAA,W,wRAaK,CACP,GAAMW,CAAAA,MAAM,CAAGC,QAAQ,CAARA,MAAAA,CAAgB,CAC7BC,OAAO,CADsB,kBAAA,CAE7BC,GAAG,CAFL,cAA+B,CAAhBF,CAAf,CAKA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,CAAY,KAAZ,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,GAAO,CAAA,CAAA,CAAA,CAAP,C,0BAnBsBX,KAAK,CAACC,S,CAA1BF,CAAAA,W,CAEGG,KAFHH,CAEWI,gBAFXJ,CAAAA,W,CAKGK,OALHL,CAKaM,kBALbN,CAAAA,W,CAQGO,GARHP,CAQSQ,cARTR,CAAAA,W,CAWGS,IAXHT,CAWUU,eAXVV,CAuBN,cAAee,CAAAA,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  // @component = ./RadioButtonItem.tsx\n  static Item = RadioButtonItem;\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return <Button {...this.props} />;\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"module"}