{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/FAB/FAB.tsx\";import color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"../ActivityIndicator\";import FABGroup from\"./FABGroup\";import Surface from\"../Surface\";import CrossFadeIcon from\"../CrossFadeIcon\";import Text from\"../Typography/Text\";import TouchableRipple from\"../TouchableRipple\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var FAB=function(_React$Component){_inherits(FAB,_React$Component);function FAB(){var _getPrototypeOf2;var _this;_classCallCheck(this,FAB);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FAB)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={visibility:new Animated.Value(_this.props.visible?1:0)};return _this;}_createClass(FAB,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.visible===prevProps.visible){return;}if(this.props.visible){Animated.timing(this.state.visibility,{toValue:1,duration:200,useNativeDriver:true}).start();}else{Animated.timing(this.state.visibility,{toValue:0,duration:150,useNativeDriver:true}).start();}}},{key:\"render\",value:function render(){var _this$props=this.props,small=_this$props.small,icon=_this$props.icon,label=_this$props.label,_this$props$accessibi=_this$props.accessibilityLabel,accessibilityLabel=_this$props$accessibi===void 0?label:_this$props$accessibi,customColor=_this$props.color,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,style=_this$props.style,visible=_this$props.visible,loading=_this$props.loading,rest=_objectWithoutProperties(_this$props,[\"small\",\"icon\",\"label\",\"accessibilityLabel\",\"color\",\"disabled\",\"onPress\",\"theme\",\"style\",\"visible\",\"loading\"]);var visibility=this.state.visibility;var disabledColor=color(theme.dark?white:black).alpha(0.12).rgb().string();var _ref=StyleSheet.flatten(style)||{},_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?disabled?disabledColor:theme.colors.accent:_ref$backgroundColor;var foregroundColor;if(typeof customColor!=='undefined'){foregroundColor=customColor;}else if(disabled){foregroundColor=color(theme.dark?white:black).alpha(0.32).rgb().string();}else{foregroundColor=!color(backgroundColor).isLight()?white:'rgba(0, 0, 0, .54)';}var rippleColor=color(foregroundColor).alpha(0.32).rgb().string();return React.createElement(Surface,_extends({},rest,{style:[{backgroundColor:backgroundColor,opacity:visibility,transform:[{scale:visibility}]},styles.container,disabled&&styles.disabled,style],pointerEvents:visible?'auto':'none',__source:{fileName:_jsxFileName,lineNumber:178}}),React.createElement(TouchableRipple,{borderless:true,onPress:onPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityStates:disabled?['disabled']:[],style:styles.touchable,__source:{fileName:_jsxFileName,lineNumber:198}},React.createElement(View,{style:[styles.content,label?styles.extended:small?styles.small:styles.standard],pointerEvents:\"none\",__source:{fileName:_jsxFileName,lineNumber:210}},icon&&loading!==true?React.createElement(CrossFadeIcon,{source:icon,size:24,color:foregroundColor,__source:{fileName:_jsxFileName,lineNumber:218}}):null,loading?React.createElement(ActivityIndicator,{size:18,color:foregroundColor,__source:{fileName:_jsxFileName,lineNumber:221}}):null,label?React.createElement(Text,{style:[styles.label,_objectSpread({color:foregroundColor},theme.fonts.medium)],__source:{fileName:_jsxFileName,lineNumber:224}},label.toUpperCase()):null)));}}]);return FAB;}(React.Component);FAB.Group=FABGroup;FAB.defaultProps={visible:true};var styles=StyleSheet.create({container:{borderRadius:28,elevation:6},touchable:{borderRadius:28},standard:{height:56,width:56},small:{height:40,width:40},extended:{height:48,paddingHorizontal:16},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},label:{marginHorizontal:8},disabled:{elevation:0}});export default withTheme(FAB);","map":{"version":3,"sources":["FAB.tsx"],"names":["FAB","React","Component","Group","FABGroup","defaultProps","visible","state","visibility","Animated","prevProps","toValue","duration","useNativeDriver","small","icon","label","accessibilityLabel","customColor","disabled","onPress","theme","style","loading","rest","disabledColor","color","backgroundColor","StyleSheet","foregroundColor","rippleColor","opacity","transform","scale","styles","container","borderRadius","elevation","touchable","standard","height","width","extended","paddingHorizontal","content","flexDirection","alignItems","justifyContent","marginHorizontal","withTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport FABGroup, { FABGroup as _FABGroup } from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\nimport { IconSource } from './../Icon';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  visibility: Animated.Value;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nclass FAB extends React.Component<Props, State> {\n  // @component ./FABGroup.tsx\n  static Group = FABGroup;\n\n  static defaultProps = {\n    visible: true,\n  };\n\n  state = {\n    visibility: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.visible === prevProps.visible) {\n      return;\n    }\n\n    if (this.props.visible) {\n      Animated.timing(this.state.visibility, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(this.state.visibility, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      small,\n      icon,\n      label,\n      accessibilityLabel = label,\n      color: customColor,\n      disabled,\n      onPress,\n      theme,\n      style,\n      visible,\n      loading,\n      ...rest\n    } = this.props;\n    const { visibility } = this.state;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n      StyleSheet.flatten(style) || {};\n\n    let foregroundColor;\n\n    if (typeof customColor !== 'undefined') {\n      foregroundColor = customColor;\n    } else if (disabled) {\n      foregroundColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else {\n      foregroundColor = !color(backgroundColor).isLight()\n        ? white\n        : 'rgba(0, 0, 0, .54)';\n    }\n\n    const rippleColor = color(foregroundColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        {...rest}\n        style={\n          [\n            {\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={disabled ? ['disabled'] : []}\n          style={styles.touchable}\n        >\n          <View\n            style={[\n              styles.content,\n              label ? styles.extended : small ? styles.small : styles.standard,\n            ]}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <CrossFadeIcon source={icon} size={24} color={foregroundColor} />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator size={18} color={foregroundColor} />\n            ) : null}\n            {label ? (\n              <Text\n                style={[\n                  styles.label,\n                  { color: foregroundColor, ...theme.fonts.medium },\n                ]}\n              >\n                {label.toUpperCase()}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n"]},"metadata":{},"sourceType":"module"}