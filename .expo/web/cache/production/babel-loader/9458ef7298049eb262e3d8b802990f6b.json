{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Portal/PortalManager.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var PortalManager=function(_React$PureComponent){_inherits(PortalManager,_React$PureComponent);function PortalManager(){var _getPrototypeOf2;var _this;_classCallCheck(this,PortalManager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PortalManager)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={portals:[]};_this.mount=function(key,children){_this.setState(function(state){return{portals:[].concat(_toConsumableArray(state.portals),[{key:key,children:children}])};});};_this.update=function(key,children){return _this.setState(function(state){return{portals:state.portals.map(function(item){if(item.key===key){return _objectSpread({},item,{children:children});}return item;})};});};_this.unmount=function(key){return _this.setState(function(state){return{portals:state.portals.filter(function(item){return item.key!==key;})};});};return _this;}_createClass(PortalManager,[{key:\"render\",value:function render(){return this.state.portals.map(function(_ref){var key=_ref.key,children=_ref.children;return React.createElement(View,{key:key,collapsable:false,pointerEvents:\"box-none\",style:StyleSheet.absoluteFill,__source:{fileName:_jsxFileName,lineNumber:42}},children);});}}]);return PortalManager;}(React.PureComponent);export{PortalManager as default};","map":{"version":3,"sources":["PortalManager.tsx"],"names":["PortalManager","React","PureComponent","state","portals","mount","key","children","update","item","unmount","StyleSheet"],"mappings":"4jBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAaqBA,GAAAA,CAAAA,a,kaACnBG,K,CAAe,CACbC,OAAO,CADM,EAAA,C,OAIfC,K,CAAQ,SAAA,GAAA,CAAA,QAAA,CAA4C,CAClD,KAAA,CAAA,QAAA,CAAc,SAAA,KAAA,CAAK,CAAA,MAAK,CACtBD,OAAO,CAAA,GAAA,MAAA,CAAA,kBAAA,CAAMD,KAAK,CAAX,OAAA,CAAA,CAAA,CAAqB,CAAEG,GAAG,CAAL,GAAA,CAAOC,QAAQ,CAD1B,QACW,CAArB,CAAA,CADe,CAAL,CAAnB,CAAA,E,QAKFC,M,CAAS,SAAA,GAAA,CAAA,QAAA,CAAA,CAAA,MACP,CAAA,KAAA,CAAA,QAAA,CAAc,SAAA,KAAA,CAAK,CAAA,MAAK,CACtBJ,OAAO,CAAED,KAAK,CAALA,OAAAA,CAAAA,GAAAA,CAAkB,SAAA,IAAA,CAAQ,CACjC,GAAIM,IAAI,CAAJA,GAAAA,GAAJ,GAAA,CAAsB,CACpB,MAAA,CAAA,aAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAkBF,QAAQ,CAA1B,QAAA,CAAA,CAAA,CAEF,OAAA,CAAA,IAAA,CALe,CACRJ,CADa,CAAL,CADZ,CACP,CADO,C,QAUTO,O,CAAU,SAAA,GAAA,CAAA,CAAA,MACR,CAAA,KAAA,CAAA,QAAA,CAAc,SAAA,KAAA,CAAK,CAAA,MAAK,CACtBN,OAAO,CAAED,KAAK,CAALA,OAAAA,CAAAA,MAAAA,CAAqB,SAAA,IAAA,CAAI,CAAA,MAAIM,CAAAA,IAAI,CAAJA,GAAAA,GAAJ,GAAA,CADjB,CACRN,CADa,CAAL,CADX,CACR,CADQ,C,iFAKD,CACP,MAAO,MAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAuB,SAAA,IAAA,CAAA,CAAA,GAAGG,CAAAA,GAAH,CAAA,IAAA,CAAA,GAAA,CAAQC,QAAR,CAAA,IAAA,CAAA,QAAA,CAAA,MAC5B,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,GAAG,CADL,GAAA,CAEE,WAAW,CAFb,KAAA,CAKE,aAAa,CALf,UAAA,CAME,KAAK,CAAEI,UAAU,CANnB,YAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAD4B,QAC5B,CAD4B,CAA9B,CAAO,CAAP,C,4BA3BuCV,KAAK,CAACC,a,CAA5BF,C,OAAAA,a","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype State = {\n  portals: Array<{\n    key: number;\n    children: React.ReactNode;\n  }>;\n};\n\n/**\n * Portal host is the component which actually renders all Portals.\n */\nexport default class PortalManager extends React.PureComponent<{}, State> {\n  state: State = {\n    portals: [],\n  };\n\n  mount = (key: number, children: React.ReactNode) => {\n    this.setState(state => ({\n      portals: [...state.portals, { key, children }],\n    }));\n  };\n\n  update = (key: number, children: React.ReactNode) =>\n    this.setState(state => ({\n      portals: state.portals.map(item => {\n        if (item.key === key) {\n          return { ...item, children };\n        }\n        return item;\n      }),\n    }));\n\n  unmount = (key: number) =>\n    this.setState(state => ({\n      portals: state.portals.filter(item => item.key !== key),\n    }));\n\n  render() {\n    return this.state.portals.map(({ key, children }) => (\n      <View\n        key={key}\n        collapsable={\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\n        }\n        pointerEvents=\"box-none\"\n        style={StyleSheet.absoluteFill}\n      >\n        {children}\n      </View>\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}